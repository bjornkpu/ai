name: Release .NET Tool

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x' # Adjust based on your .NET version

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore
        working-directory: src/McpClient

      # Extract version from Git tag
      - name: Extract version from tag
        id: get_version
        run: echo "PACKAGE_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      # Pack the tool
      - name: Pack NuGet package
        run: dotnet pack --configuration Release /p:PackageVersion=${{ env.PACKAGE_VERSION }}
        working-directory: src/McpClient

      # Publish to NuGet
      - name: Push package to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push ./bin/Release/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json
        working-directory: src/McpClient

      # Create a GitHub release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.PACKAGE_VERSION }}
          release_name: Release v${{ env.PACKAGE_VERSION }}
          body: |
            ### Changelog
            - Automatically published version `${{ env.PACKAGE_VERSION }}`
            - Includes all changes up to this release.
          draft: false
          prerelease: false
